<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAALADAACwAwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAALgAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAALcAAAAbAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAA/QAAAOIAAADKAAAAywAAAMsAAADLAAAAywAA
        AMsAAADLAAAAywAAAMsAAADLAAAAywAAAMsAAADLAAAAywAAAMsAAADLAAAAywAAAMoAAADiAAAA/QAA
        AF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIAAAD/AAAAegAAAAsAAAAPAAAADwAA
        AA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAACwAA
        AHoAAAD/AAAAcgAAAAAAAAAAAAAAAAAAAAAAAAANAAAAFwAAABcAAAATAAAAfwAAAP8AAAB+AAAAEgAA
        ABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAA
        ABYAAAASAAAAfgAAAP8AAAB/AAAAEwAAABcAAAAXAAAADQAAALcAAADXAAAA2AAAANcAAADqAAAA/wAA
        AOoAAADXAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAA
        ANgAAADYAAAA2AAAANcAAADqAAAA/wAAAOoAAADXAAAA2AAAANcAAAC3AAAA/wAAAPcAAADbAAAA2AAA
        ANcAAADWAAAA1wAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAA
        ANgAAADYAAAA2AAAANgAAADYAAAA2AAAANcAAADWAAAA1wAAANgAAADbAAAA9wAAAP8AAAD/AAAA0QAA
        ACcAAAAWAAAAFwAAABcAAAAXAAAAFAAAABQAAAAXAAAAFwAAABcAAAAVAAAAFAAAABYAAAAXAAAAFwAA
        ABYAAAAUAAAAFQAAABYAAAATAAAAFgAAABcAAAAXAAAAFgAAABMAAAAWAAAAFgAAACcAAADRAAAA/wAA
        AP8AAADMAAAAEQAAAAAAAAAAAAAAAAAAAAIAAABCAAAAQgAAAAEAAAAAAAAAAAAAAC4AAABUAAAACgAA
        AAAAAAAAAAAACgAAAFMAAAAsAAAAGAAAAFsAAAAaAAAAAAAAAAAAAAAaAAAAWwAAABkAAAAAAAAAEQAA
        AMwAAAD/AAAA/wAAAMwAAAASAAAAAAAAAAAAAAAAAAAAEwAAAM8AAADPAAAAEwAAAAAAAAAAAAAAlwAA
        APcAAABWAAAAFAAAABQAAABWAAAA9wAAAJEAAABdAAAA/AAAAJwAAAAJAAAACQAAAJwAAAD8AAAAXQAA
        AAAAAAASAAAAzAAAAP8AAAD/AAAAzAAAABIAAAAAAAAAAAAAAAAAAAAYAAAA2QAAANkAAAAYAAAAAAAA
        AAAAAABlAAAA/QAAAOcAAADXAAAA1wAAAOcAAAD9AAAAZAAAAB4AAADNAAAA+QAAAGYAAABlAAAA+QAA
        AM0AAAAiAAAAAAAAABIAAADMAAAA/wAAAP8AAADMAAAAEgAAAAAAAAAAAAAAAAAAABgAAADZAAAA2QAA
        ABgAAAAAAAAAAAAAACIAAADcAAAA/wAAAOIAAADiAAAA/wAAAN0AAAAiAAAAAAAAAEsAAADuAAAA6gAA
        AOoAAADuAAAATAAAAAAAAAAAAAAAEgAAAMwAAAD/AAAA/wAAAMwAAAASAAAAAAAAAAAAAAAAAAAAGAAA
        ANkAAADZAAAAGAAAAAAAAAAAAAAAAgAAAJkAAAD/AAAAdgAAAHUAAAD/AAAAmgAAAAIAAAAAAAAAAgAA
        AIQAAAD/AAAA/wAAAIUAAAACAAAAAAAAAAAAAAASAAAAzAAAAP8AAAD/AAAAzAAAABIAAAAAAAAAAAAA
        AAAAAAAYAAAA2QAAANkAAAAYAAAAAAAAAAAAAAAAAAAASgAAAPgAAAC/AAAAvgAAAPkAAABLAAAAAAAA
        AAAAAAACAAAAhAAAAP8AAAD/AAAAhQAAAAIAAAAAAAAAAAAAABIAAADMAAAA/wAAAP8AAADMAAAAEgAA
        AAAAAAAAAAAAAAAAABgAAADZAAAA2QAAABgAAAAAAAAAAAAAAAAAAAATAAAAxwAAAP4AAAD+AAAAyQAA
        ABQAAAAAAAAAAAAAAEsAAADuAAAA6gAAAOoAAADuAAAATAAAAAAAAAAAAAAAEgAAAMwAAAD/AAAA/wAA
        AMwAAAASAAAAAAAAABkAAABmAAAAfwAAAOoAAADqAAAAfwAAAGYAAAAZAAAAAAAAAAAAAAB8AAAA/wAA
        AP8AAAB/AAAAAAAAAAAAAAAiAAAAzQAAAPkAAABmAAAAZQAAAPkAAADNAAAAIgAAAAAAAAASAAAAzAAA
        AP8AAAD/AAAAzAAAABIAAAAAAAAAXAAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA+wAAAFwAAAAAAAAAAAAA
        ADEAAADmAAAA6AAAADMAAAAAAAAAAAAAAF0AAAD8AAAAnAAAAAkAAAAJAAAAnAAAAPwAAABcAAAAAAAA
        ABIAAADMAAAA/wAAAP8AAADMAAAAEQAAAAAAAAAYAAAAZQAAAHAAAABvAAAAbwAAAHAAAABlAAAAGAAA
        AAAAAAAAAAAAAwAAAEcAAABIAAAABAAAAAAAAAAAAAAAGQAAAFoAAAAaAAAAAAAAAAAAAAAaAAAAWgAA
        ABkAAAAAAAAAEQAAAMwAAAD/AAAA/wAAANEAAAAnAAAAFgAAABYAAAATAAAAEwAAABMAAAATAAAAEwAA
        ABMAAAAWAAAAFwAAABcAAAAXAAAAFAAAABQAAAAXAAAAFwAAABcAAAAWAAAAEwAAABYAAAAXAAAAFwAA
        ABYAAAATAAAAFgAAABYAAAAnAAAA0QAAAP8AAAD/AAAA9wAAANsAAADYAAAA1wAAANYAAADXAAAA2AAA
        ANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAA
        ANgAAADYAAAA1wAAANYAAADXAAAA2AAAANsAAAD3AAAA/wAAALcAAADXAAAA2AAAANcAAADqAAAA/wAA
        AOoAAADXAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAA
        ANgAAADYAAAA2AAAANcAAADqAAAA/wAAAOoAAADXAAAA2AAAANcAAAC3AAAADQAAABcAAAAXAAAAEwAA
        AH8AAAD/AAAAfwAAABMAAAAXAAAAFgAAABYAAAAWAAAAFgAAABYAAAAXAAAAFwAAABcAAAAXAAAAFwAA
        ABcAAAAXAAAAFwAAABcAAAAXAAAAEwAAAH8AAAD/AAAAfwAAABMAAAAXAAAAFwAAAA0AAAAAAAAAAAAA
        AAAAAAAAAAAAcgAAAP8AAAByAAAAAAAAAAIAAAASAAAAFgAAABYAAAAWAAAAFgAAAAkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAAP8AAAByAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAByAAAA/wAAAHIAAAAAAAAARAAAAM8AAADZAAAA2AAAANgAAADaAAAAmQAA
        AAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByAAAA/wAAAHIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIAAAD/AAAAcgAAAAAAAABEAAAAzwAAANkAAADYAAAA2AAA
        ANoAAACZAAAACgAAAAAAAAAAAAAAAAAAAAIAAAATAAAAFwAAABcAAAAXAAAAEwAAAH8AAAD/AAAAcgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAAP8AAAByAAAAAAAAAAIAAAASAAAAFgAA
        ABYAAAAWAAAAFgAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAQwAAAM0AAADYAAAA2AAAANgAAADWAAAA6AAA
        AP8AAABxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByAAAA/wAAAHIAAAAAAAAAAgAA
        ABIAAAAWAAAAFgAAABYAAAAWAAAACgAAAAAAAAAAAAAAAAAAAAAAAABxAAAA/wAAAOoAAADXAAAA2wAA
        APkAAAD/AAAA6wAAAEYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIAAAD/AAAAcgAA
        AAAAAABEAAAAzwAAANkAAADYAAAA2AAAANoAAACZAAAACgAAAAAAAAAAAAAAAAAAAHIAAAD/AAAAfgAA
        ABQAAAB5AAAA9wAAAO8AAABkAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAA
        AP8AAAByAAAAAAAAAEQAAADPAAAA2QAAANgAAADYAAAA2gAAAJkAAAAKAAAAAAAAAAAAAAAAAAAAcgAA
        AP8AAABzAAAAXAAAAO0AAADvAAAAZQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAByAAAA/wAAAHIAAAAAAAAAAgAAABIAAAAWAAAAFgAAABYAAAAWAAAACQAAAAAAAAAAAAAAAAAA
        AAAAAAByAAAA/wAAAMYAAADqAAAA8AAAAGcAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAHIAAAD/AAAAfAAAAA4AAAASAAAAEQAAABEAAAARAAAAEQAAABEAAAASAAAAEgAA
        ABIAAAASAAAADgAAAHwAAAD/AAAA/wAAAPAAAABoAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAXwAAAP0AAADkAAAAzAAAAM0AAADNAAAAzQAAAM0AAADNAAAAzQAA
        AM0AAADNAAAAzQAAAM0AAADMAAAA4wAAAP8AAADvAAAAaQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAuAAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA9gAAAHcAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8AAAD/AAAA/wAAAPAAAAAAAAAAAAAAAAAAAAABwxgYgcMAAIHDAACBww
        CBgcMAgYHDgYGBw4GBgQDDAIEAwwCBAMMYgAAAAAAAAAAAAAAAAAAAAA8QH/j/EA/4/xAOAP8QHgD/EB
        4A/xAOAP8QDgH/EB4D/wAAB/8AAA//AAAf8=
</value>
  </data>
</root>